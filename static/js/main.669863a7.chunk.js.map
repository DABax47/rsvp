{"version":3,"sources":["GuestName.js","Guest.js","PendingGuest.js","Guestlist.js","Counter.js","Form.js","App.js","index.js"],"names":["GuestName","props","isEditing","type","value","children","onChange","handleNameEdits","Guest","e","setName","target","name","checked","hand","handleConfirmation","onClick","handleToggleEditing","handleRemoveGuest","PendingGuest","className","Guestlist","pendingGuest","guest","filter","index","isFiltered","isConfirmed","map","toggleConfirmationAt","toggleEditingAt","text","setNameAt","Counter","numberAttending","numberUnconfirmed","totalInvited","Form","addNewGuest","handleGuestInput","onSubmit","placeholder","App","state","toggleGuestPropertyAt","property","indexToChange","setState","toggleFilter","getTotalInvited","length","preventDefault","indexToRemove","getAttendingGuests","reduce","total","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.669863a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GuestName=(props)=>\r\n{if (props.isEditing ) {\r\n  return(<input type=\"text\" value={props.children} onChange={props.handleNameEdits} />)\r\n}\r\n  return(<span>\r\n    {props.children}</span>)\r\n}\r\n\r\nexport default GuestName;\r\n","import React from 'react';\r\nimport GuestName from './GuestName'\r\nconst Guest=(props)=>\r\n     <li >\r\n      <GuestName isEditing={props.isEditing} handleNameEdits={(e)=>{props.setName(e.target.value)}}>{props.name}</GuestName>\r\n      <label>\r\n        <input checked = {props.hand} onChange ={props.handleConfirmation} type=\"checkbox\"/> Confirmed\r\n      </label>\r\n      <button onClick={props.handleToggleEditing}>\r\n{props.isEditing ? 'save' : 'edit'}\r\n\r\n      </button>\r\n      <button onClick={props.handleRemoveGuest}>remove</button>\r\n    </li>\r\n\r\nexport default Guest;\r\n","import React from 'react';\r\n\r\nconst PendingGuest=(props)=>{if (props.name) {\r\n  return(  <li className='pending' >\r\n     <span >{props.name}</span>\r\n\r\n   </li>);\r\n\r\n}else{\r\n  return null\r\n}};\r\n\r\n\r\n\r\nexport default PendingGuest;\r\n","import React from 'react';\r\nimport Guest from './Guest'\r\nimport PendingGuest from './PendingGuest'\r\nconst Guestlist=(props)=>\r\n  <ul>\r\n  <PendingGuest name={props.pendingGuest}/>\r\n  { props.guest\r\n    .filter((guest, index)=>!guest.isFiltered || guest.isConfirmed )\r\n    .map((guest, index)=>\r\n  <Guest handleRemoveGuest={()=>props.handleRemoveGuest(index)}handleConfirmation={()=>{props.toggleConfirmationAt(index)}} handleToggleEditing={()=>{props.toggleEditingAt(index)}} name={guest.name} isEditing={guest.isEditing} isConfirmed={guest.isConfirmed} setName={text=>props.setNameAt(text,index)}/>)\r\n  }\r\n  </ul>;\r\n\r\nexport default Guestlist;\r\n","import React from 'react'\r\n\r\nconst Counter=(props)=>\r\n<table className=\"counter\">\r\n  <tbody>\r\n    <tr>\r\n      <td>Attending:</td>\r\n      <td>{props.numberAttending}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>Unconfirmed:</td>\r\n      <td>{props.numberUnconfirmed}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>Total:</td>\r\n      <td>{props.totalInvited}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\nconst Form=({addNewGuest, handleGuestInput, pendingGuest})=>\r\n<form onSubmit={addNewGuest}>\r\n  <input\r\n    type=\"text\"\r\n    onChange={handleGuestInput}\r\n    value={pendingGuest}\r\n    placeholder=\"Invite Someone\"\r\n  />\r\n  <button type=\"submit\" name=\"submit\" value=\"submit\">\r\n    Submit\r\n  </button>\r\n</form>\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport Guestlist from \"./Guestlist\";\nimport Counter from \"./Counter\";\nimport Form from \"./Form\";\nclass App extends React.Component {\n  state = {\n    pendingGuest: \"\",\n    isFiltered: false,\n    guest: [\n    ],\n  };\n\n  toggleGuestPropertyAt = (property, indexToChange) =>\n    this.setState({\n      guest: this.state.guest.map((guest, index) => {\n        if (index === indexToChange) {\n          return {\n            ...guest,\n            [property]: !guest[property],\n          };\n        }\n        return guest;\n      }),\n    });\n\n  toggleConfirmationAt = (index) => {\n    this.toggleGuestPropertyAt(\"isConfirmed\", index);\n  };\n  toggleEditingAt = (index) => {\n    this.toggleGuestPropertyAt(\"isEditing\", index);\n  };\n\n  setNameAt = (name, indexToChange) =>\n    this.setState({\n      guest: this.state.guest.map((guest, index) => {\n        if (index === indexToChange) {\n          return {\n            ...guest,\n            name,\n          };\n        }\n        return guest;\n      }),\n    });\n\n  toggleFilter = () => {\n    this.setState({\n      isFiltered: !this.state.isFiltered,\n    });\n  };\n  getTotalInvited = () => this.state.guest.length;\n  handleGuestInput = (e) => {\n    this.setState({\n      pendingGuest: e.target.value,\n    });\n  };\n  addNewGuest = (e) => {\n    e.preventDefault();\n    this.setState({\n      guest: [\n        { name: this.state.pendingGuest, isConfirmed: false, isEditing: false },\n        ...this.state.guest,\n      ],\n      pendingGuest: \"\",\n    });\n  };\n  handleRemoveGuest = (indexToRemove) =>\n    this.setState({\n      guest: this.state.guest.filter((guest, index) => index !== indexToRemove),\n    });\n  ;\n  //need to calc the totla number of confirmed guests\n  //loop through the guests and add the number of confimed\n  //get unattending Total\n  // take total guests minus the confirmed guests to get unattending/unconfirmed guests\n  getAttendingGuests = () =>\n    this.state.guest.reduce(\n      (total, guest) =>guest.isConfirmed ? total +1 : total,0);\n  getTotalInvited = () => this.state.guest.length;\n  render() {\n    const totalInvited = this.getTotalInvited();\n    const numberAttending = this.getAttendingGuests();\n    const numberUnconfirmed = totalInvited - numberAttending;\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>RSVP</h1>\n          <p>Useful React Fundementals</p>\n        <Form addNewGuest={this.addNewGuest} handleGuestInput={this.handleGuestInput} pendingGuest={this.state.pendingGuest}/>\n        </header>\n        <div className=\"main\">\n          <div>\n            <h2>Invitees</h2>\n            <label>\n              <input\n                onChange={this.toggleFilter}\n                checked={this.state.isFiltered}\n                type=\"checkbox\"\n              />{\" \"}\n              Hide those who haven't responded\n            </label>\n          </div>\n          <Counter\n            totalInvited={totalInvited}\n            numberAttending={numberAttending}\n            numberUnconfirmed={numberUnconfirmed}\n          />\n          <Guestlist\n            pendingGuest={this.state.pendingGuest}\n            handleRemoveGuest={this.handleRemoveGuest}\n            isFiltered={this.state.isFiltered}\n            guest={this.state.guest}\n            toggleConfirmationAt={this.toggleConfirmationAt}\n            toggleEditingAt={this.toggleEditingAt}\n            setNameAt={this.setNameAt}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}